(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{301:function(t,s,a){"use strict";a.r(s);var r=a(17),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"jsx-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsx-简介"}},[t._v("#")]),t._v(" JSX 简介")]),t._v(" "),a("h2",{attrs:{id:"什么是-jsx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-jsx"}},[t._v("#")]),t._v(" 什么是 JSX")]),t._v(" "),a("p",[t._v("JSX 是一个 JavaScript 的语法扩展")]),t._v(" "),a("h2",{attrs:{id:"为什么使用-jsx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用-jsx"}},[t._v("#")]),t._v(" 为什么使用 JSX")]),t._v(" "),a("p",[t._v("React 认为渲染逻辑本质上与其他 UI 逻辑内在耦合，比如，在 UI 中需要绑定处理事件、在某些时刻状态发生变化时需要通知到 UI，以及需要在 UI 中展示准备好的数据")]),t._v(" "),a("h2",{attrs:{id:"特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),a("h3",{attrs:{id:"在-jsx-中嵌入表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在-jsx-中嵌入表达式"}},[t._v("#")]),t._v(" 在 JSX 中嵌入表达式")]),t._v(" "),a("p",[t._v("在 JSX 语法中，可以在大括号内放置任何有效的 JavaScript 表达式")]),t._v(" "),a("h3",{attrs:{id:"jsx-也是一个表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsx-也是一个表达式"}},[t._v("#")]),t._v(" JSX 也是一个表达式")]),t._v(" "),a("p",[t._v("可以在 if 语句和 for 循环的代码块中使用 JSX，将 JSX 赋值给变量，把 JSX 当作参数传入，以及从函数中返回 JSX")]),t._v(" "),a("h3",{attrs:{id:"jsx-特定属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsx-特定属性"}},[t._v("#")]),t._v(" JSX 特定属性")]),t._v(" "),a("ul",[a("li",[t._v("可以通过使用引号，来将属性值指定为字符串字面量")]),t._v(" "),a("li",[t._v("可以使用大括号，来在属性值中插入一个 JavaScript 表达式")]),t._v(" "),a("li",[t._v("因为 JSX 语法上更接近 JavaScript 而不是 HTML，所以 React DOM 使用 camelCase（小驼峰命名）来定义属性的名称，而不使用 HTML 属性名称的命名约定")])]),t._v(" "),a("h3",{attrs:{id:"使用-jsx-指定子元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-jsx-指定子元素"}},[t._v("#")]),t._v(" 使用 JSX 指定子元素")]),t._v(" "),a("ul",[a("li",[t._v("JSX 标签里能够包含很多子元素")])]),t._v(" "),a("h3",{attrs:{id:"jsx-防止注入攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsx-防止注入攻击"}},[t._v("#")]),t._v(" JSX 防止注入攻击")]),t._v(" "),a("ul",[a("li",[t._v("可以安全地在 JSX 当中插入用户输入内容")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" title "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("potentiallyMaliciousInput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 直接使用是安全的：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" element "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("title"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("React DOM 在渲染所有输入内容之前，默认会进行转义。它可以确保在你的应用中，永远不会注入那些并非自己明确编写的内容。所有的内容在渲染之前都被转换成了字符串。这样可以有效地防止 XSS（cross-site-scripting, 跨站脚本）攻击")])])}),[],!1,null,null,null);s.default=e.exports}}]);