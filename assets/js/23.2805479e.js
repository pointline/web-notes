(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{302:function(t,a,e){"use strict";e.r(a);var r=e(17),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"元素渲染"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#元素渲染"}},[t._v("#")]),t._v(" 元素渲染")]),t._v(" "),e("h2",{attrs:{id:"更新已渲染的元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新已渲染的元素"}},[t._v("#")]),t._v(" 更新已渲染的元素")]),t._v(" "),e("p",[t._v("React 元素是不可变对象。一旦被创建，你就无法更改它的子元素或者属性。一个元素就像电影的单帧：它代表了某个特定时刻的 UI。")]),t._v(" "),e("h2",{attrs:{id:"react-只更新它需要更新的部分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#react-只更新它需要更新的部分"}},[t._v("#")]),t._v(" React 只更新它需要更新的部分")]),t._v(" "),e("p",[t._v("React DOM 会将元素和它的子元素与它们之前的状态进行比较，并只会进行必要的更新来使 DOM 达到预期的状态。")])])}),[],!1,null,null,null);a.default=s.exports}}]);